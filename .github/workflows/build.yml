# SPDX-FileCopyrightText: 2023 Klar√§lvdalens Datakonsult AB, a KDAB Group company <info@kdab.com>
#
# SPDX-License-Identifier: MIT

name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false #true
      matrix:
        os:
          #- ubuntu-22.04 # Builds/test fine
          #- windows-2022 # Builds/test fine
          - macos-12
        build_type:
          - Debug
          #- Release
        preset:
          - cpp14
          - cpp17
          - cpp20
          - cpp23
        qt:
          - version: "5.15.2"
            requested: "5.15"
          #- version: "6.3.2"  # Qt 6.3 is not an LTS version, so '6.3.*' always resolves to '6.3.2'
            #requested: "6.3.*"

    steps:
      - name: Install Qt with options and default aqtversion
        if: ${{ matrix.build_type == 'Debug' }} # Only Tests require Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: null # use whatever the default is
          modules: ${{ matrix.qt.modules }}
          version: ${{ matrix.qt.requested }}
          cache: true

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Create build directory
        run: mkdir build

      - name: Install ninja-build tool (must be after Qt due PATH changes)
        uses: turtlesec-no/get-ninja@main

      - name: Make sure MSVC is found when Ninja generator is in use
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure project
        run: >
          cmake -S . -B ./build -G Ninja --preset ${{ matrix.preset }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DBUILD_TESTING=${{ matrix.build_type == 'Debug' }}
          -DKDALGORITHMS_BUILD_TEST=${{ matrix.build_type == 'Debug' }}

      - name: Build Project
        run: cmake --build ./build

      - name: Run tests on Linux (offscreen)
        if: ${{ matrix.build_type == 'Debug' && runner.os == 'Linux' }}
        run: ctest --test-dir ./build -C ${{ matrix.build_type }} --output-on-failure
        env:
          QT_QPA_PLATFORM: offscreen

      - name: Run tests on Windown/macOS
        if: ${{ matrix.build_type == 'Debug' && runner.os != 'Linux' }}
        run: ctest --test-dir ./build -C ${{ matrix.build_type }} --output-on-failure

      - name: Read tests log when it fails
        uses: andstor/file-reader-action@v1
        if: ${{ failure() && matrix.build_type == 'Debug' }}
        with:
          path: "./build/Testing/Temporary/LastTest.log"
